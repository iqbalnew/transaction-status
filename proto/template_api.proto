syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/Empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "template_payload.proto";

package template.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Template GRPC Service";
        version: "1.0";
    };
    security_definitions: {
        security: {
            key: "bearer"
            value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service TemplateService {

    // #region Utility
    
    rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/template/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Utility"]
            summary: "Health Check"
            description: "This API for check server's health"
        };
    };

    // #endregion

    // #region Templates
    
    rpc GetAllTemplates(GetAllTemplatesRequest) returns (GetAllTemplatesResponse) {
        option (google.api.http) = {
            post: "/api/template/data"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Templates"]
            summary: "Get template data"
            description: "This API for get template data"
        };
    };

    rpc GetTemplateDetail(GetTemplateDetailRequest) returns (GetTemplateDetailResponse) {
        option (google.api.http) = {
            post: "/api/template/data-detail"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Templates"]
            summary: "Get template data detail"
            description: "This API for get template data detail by id"
        };
    };

    rpc SaveTemplate(SaveTemplateRequest) returns (GeneralBodyResponse) {
        option (google.api.http) = {
            post: "/api/template/save-data"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Templates"]
            summary: "Save template data"
            description: "This API for save template data"
        };
    };

    rpc UpdateTemplate(UpdateTemplateRequest) returns (GetTemplateDetailResponse) {
        option (google.api.http) = {
            post: "/api/template/update-data"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Templates"]
            summary: "Update template data"
            description: "This API for update template data"
        };
    };

    rpc DeleteTemplate(DeleteTemplateRequest) returns (GeneralBodyResponse) {
        option (google.api.http) = {
            post: "/api/template/delete-data"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Templates"]
            summary: "Delete template data"
            description: "This API for delete template data"
        };
    };

    // #endregion
}